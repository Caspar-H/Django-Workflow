#image: allentpg/djangotest
image: docker/compose:latest
stages:
  - remove-ranrefresh
  - remove-master
  - build-ranrefresh
  - build-master
  - deploy-ranrefresh
  - deploy-master

remove-ranrefresh:
    stage: remove-ranrefresh
    image: google/cloud-sdk
    variables:
        KUBERNETES_SERVICE_ACCOUNT_OVERWRITE: gitlab-admin
        KUBERNETES_SERVICE_ACCOUNT_OVERWRITE_ALLOWED: gitlab-admin

    script:
        #- docker rmi $(docker images -q --filter "dangling=true") || true
        #- docker run --name test allentpg/dj-dashboard /bin/bash -c "python3 manage.py test"
        #- docker stop test3 || true && docker rm test3 || true
        #- docker rmi test3 || true
        #- docker build -t test3 .
        #- docker run -d --name test3 --restart=unless-stopped -p 8070:8000 test3 /bin/bash -c "python3 manage.py runserver 0.0.0.0:8000"
        #- kubectl get pod -n kube-system
        - kubectl delete -f deployment.yml -f service.yml -n gitlab-managed-apps
        #- kubectl apply -f deployment.yml -f service.yml -n gitlab-managed-apps
        #kubectl version
    tags:
        - rfk8s
    only:
    # on which branch the stage would run
        - ranrefresh

remove-master:
    stage: remove-master
    image: google/cloud-sdk
    variables:
        KUBERNETES_SERVICE_ACCOUNT_OVERWRITE: gitlab-admin
        KUBERNETES_SERVICE_ACCOUNT_OVERWRITE_ALLOWED: gitlab-admin

    script:
        #- docker rmi $(docker images -q --filter "dangling=true") || true
        #- docker run --name test allentpg/dj-dashboard /bin/bash -c "python3 manage.py test"
        #- docker stop test3 || true && docker rm test3 || true
        #- docker rmi test3 || true
        #- docker build -t test3 .
        #- docker run -d --name test3 --restart=unless-stopped -p 8070:8000 test3 /bin/bash -c "python3 manage.py runserver 0.0.0.0:8000"
        #- kubectl get pod -n kube-system
        - kubectl delete -f deployment-master.yml -f service-master.yml -n gitlab-managed-apps
        #- kubectl apply -f deployment.yml -f service.yml -n gitlab-managed-apps
        #kubectl version
    tags:
        - rfk8s
    only:
    # on which branch the stage would run
        - master

build-image-ranrefresh:
  stage: build-ranrefresh
  before_script:
    #- docker stop dashboard_test || true && docker rm dashboard_test || true
    #- docker stack rm dj-dashboard || true
    - docker rmi allentpg/dj-workflow || true
    - docker rmi $(docker images | grep "^<none>" | awk "{print $3}") || true
  script:
    - docker build -t allentpg/dj-workflow:latest . 
  after_script:
        #- apk add --update curl && rm -rf /var/cache/apk/*
        #- curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl 
        #- chmod +x ./kubectl
    - docker login -u allentpg -p Summer2019
    - docker push allentpg/dj-workflow
  tags:
    - image
  only:
    # on which branch the stage would run
    - ranrefresh
    
build-image-master:
  stage: build-master
  before_script:
    #- docker stop dashboard_test || true && docker rm dashboard_test || true
    #- docker stack rm dj-dashboard || true
    - docker rmi allentpg/dj-workflow-master || true
    - docker rmi $(docker images | grep "^<none>" | awk "{print $3}") || true
  script:
    - docker build -t allentpg/dj-workflow-master:latest . 
  after_script:
        #- apk add --update curl && rm -rf /var/cache/apk/*
        #- curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl 
        #- chmod +x ./kubectl
    - docker login -u allentpg -p Summer2019
    - docker push allentpg/dj-workflow-master
  tags:
    - image
  only:
    # on which branch the stage would run
    - master

deploy-ranrefresh:
    stage: deploy-ranrefresh
    image: google/cloud-sdk
    variables:
        KUBERNETES_SERVICE_ACCOUNT_OVERWRITE: gitlab-admin
        KUBERNETES_SERVICE_ACCOUNT_OVERWRITE_ALLOWED: gitlab-admin

    script:
        #- docker rmi $(docker images -q --filter "dangling=true") || true
        #- docker run --name test allentpg/dj-dashboard /bin/bash -c "python3 manage.py test"
        #- docker stop test3 || true && docker rm test3 || true
        #- docker rmi test3 || true
        #- docker build -t test3 .
        #- docker run -d --name test3 --restart=unless-stopped -p 8070:8000 test3 /bin/bash -c "python3 manage.py runserver 0.0.0.0:8000"
        #- kubectl get pod -n kube-system
        #- kubectl delete -f deployment.yml -f service.yml -n gitlab-managed-apps
        - kubectl apply -f deployment.yml -f service.yml -n gitlab-managed-apps
        #kubectl version
    tags:
        - rfk8s
    only:
    # on which branch the stage would run
        - ranrefresh
        
deploy-master:
    stage: deploy-master
    image: google/cloud-sdk
    variables:
        KUBERNETES_SERVICE_ACCOUNT_OVERWRITE: gitlab-admin
        KUBERNETES_SERVICE_ACCOUNT_OVERWRITE_ALLOWED: gitlab-admin

    script:
        #- docker rmi $(docker images -q --filter "dangling=true") || true
        #- docker run --name test allentpg/dj-dashboard /bin/bash -c "python3 manage.py test"
        #- docker stop test3 || true && docker rm test3 || true
        #- docker rmi test3 || true
        #- docker build -t test3 .
        #- docker run -d --name test3 --restart=unless-stopped -p 8070:8000 test3 /bin/bash -c "python3 manage.py runserver 0.0.0.0:8000"
        #- kubectl get pod -n kube-system
        #- kubectl delete -f deployment-master.yml -f service-master.yml -n gitlab-managed-apps
        - kubectl apply -f deployment-master.yml -f service-master.yml -n gitlab-managed-apps
        #kubectl version
    tags:
        - rfk8s
    only:
    # on which branch the stage would run
        - master



